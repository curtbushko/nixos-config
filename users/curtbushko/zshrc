set -o vi
# Set the editing mode to vi

# If you come from bash you might have to change your $PATH.
export ARCH=$(uname -m)
export SYNCTHING="${HOME}/Sync"
export SCRIPTS="${HOME}/scripts"
export WALLPAPERS="${SYNCTHING}/wallpapers"
export KB="${SYNCTHING}/KB"
export DOTFILES="${HOME}/.dotfiles"
export PATH=${HOME}/bin:${SCRIPTS}:${HOME}/.local/bin:${HOME}/Library/Python/3.9/bin:${HOME}/Library/Python/3.8/bin:${HOMEBREW_DIR}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin:${PATH}
#export GOOS=`go env GOOS`
#export GOARCH=`go env GOARCH`
# terraform v2 changed how it handles kube paths and doesn't use the default anymore :(
export KUBE_CONFIG_PATH="${HOME}/.kube/config"

# Use bat with man to give it colour
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"
export VISUAL="nvim"
export EDITOR="nvim"
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME=""
#ZSH_THEME="agnoster"
# My custome theme in the oh-my-zsh dotfilee
# rerelk
ZSH_THEME="gruvbox"
SOLARIZED_THEME="dark"
#ZSH_THEME="minimal"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Appends every command to the history file once it is executed
setopt inc_append_history
# Reloads the history whenever you use it
setopt share_history
export HIST_STAMPS="%y-%m-%d %T "
export PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker golang vi-mode shrink-path)
source $ZSH/oh-my-zsh.sh

# User configuration

# FZF Settings
export FZF_DEFAULT_COMMAND='rg --files --hidden -g "!.git" '

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Colours
#
# export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
#   --color=fg:-1,bg:-1,hl:#7aa6da
#   --color=fg+:-1,bg+:-1,hl+:#70c0b1
#   --color=info:#1d1f21,prompt:#d54e53,pointer:#c397d8
#   --color=marker:#b9ca4a,spinner:#d54e53,header:#70c0b1'
#
# 2023-02-20 trying out a tokyonight theme for fzf 
	export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS' 
	--color=fg:#c0caf5,bg:#1a1b26,hl:#bb9af7
	--color=fg+:#c0caf5,bg+:#1a1b26,hl+:#7dcfff
	--color=info:#7aa2f7,prompt:#7dcfff,pointer:#7dcfff 
	--color=marker:#9ece6a,spinner:#9ece6a,header:#9ece6a'


NC='\033[0m'       # No colour

# Regular Colors
BLACK='\033[0;30m'        # Black
RED='\033[0;31m'          # Red
GREEN='\033[0;32m'        # Green
YELLOW='\033[0;33m'       # Yellow
BLUE='\033[0;34m'         # Blue
PURPLE='\033[0;35m'       # Purple
CYAN='\033[0;36m'         # Cyan
WHITE='\033[0;37m'        # White

# Bold
BBLACK='\033[1;30m'       # Black
BRED='\033[1;31m'         # Red
BGREEN='\033[1;32m'       # Green
BYELLOW='\033[1;33m'      # Yellow
BBLUE='\033[1;34m'        # Blue
BPURPLE='\033[1;35m'      # Purple
BCYAN='\033[1;36m'        # Cyan
BWHITE='\033[1;37m'       # White

# Aliases
export FOO="not set"
export BAR="not set"
export BAZ="not set"
export SRC="not set"
export DEST="not set"

alias foodirs='echo FOO=$FOO, BAR=$BAR, BAZ=$BAZ'
alias foo='export FOO=$PWD; foodirs'
alias bar='export BAR=$PWD; foodirs'
alias baz='export BAZ=$PWD; foodirs'
alias srcdirs='echo SRC=$SRC, DEST=$DEST'
alias src='export SRC=$PWD; srcdirs'
alias dest='export DEST=$PWD; srcdirs'

alias cdfoo='cd $FOO'
alias cdbar='cd $BAR'
alias cdbaz='cd $BAZ'
alias cdsrc='cd $SRC'
alias cddest='cd $DEST'

alias lsfoo='ls $FOO'
alias lsbar='ls $BAR'
alias lsbaz='ls $BAZ'
alias lssrc='ls $SRC'
alias lsdest='ls $DEST'

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias mdkir="mkdir"
alias cat="bat"

# Zoxide aliases
alias za='zoxide add'
alias zr='zoxide remove'


export WORKSPACE="$HOME/workspace"
export GITHUB="$HOME/workspace/github.com"
export DOCKER_HUB="curtbushko"
export BUSHKO="$HOME/workspace/github.com/curtbushko"

alias rg='rg --hidden'
alias python='/usr/local/bin/python3'
alias pip='/usr/local/bin/pip3'
alias shruggie='echo -n "¯\_(ツ)_/¯" | pbcopy'

alias vi='nvim'
alias reload='source ~/.zshrc'
alias cdworkspace='cd $WORKSPACE'
alias cdgithub='cd $GITHUB'
alias cdleetcode='cd $BUSHKO/leetcode'
alias cdpoc='cd $BUSHKO/cni-poc'
alias cddemo='cd $BUSHKO/cni-demo'
alias cdbushko='cd $BUSHKO'
alias cdkb='cd $KB'
alias cdsync='cd $SYNC'
alias cdistio='cd $GITHUB/istio/istio'
alias cdlinkerd='cd $GITHUB/linkerd/linkerd2'
alias cddot='cd $DOTFILES'
alias cdnvim='cd $DOTFILES/nvim/.config/nvim'
alias cdscripts='cd $SCRIPTS'
alias lsscripts='ls $SCRIPTS'
alias kube='kubectl'
alias kubeclt='kubectl'
alias k='kubectl'
alias kaf='kubectl apply -f'
alias kdf='kubectl delete -f'
alias kev='kubectl get events --sort-by=".metadata.creationTimestamp" -A -o custom-columns=FirstSeen:.firstTimestamp,Count:.count,From:.source.component,Type:.type,Reason:.reason,Message:.message'
alias kgp='kubectl get pod'
alias kgps='kubectl get pods'
alias kdp='kubectl describe pod'
alias kdel='kubectl delete'
alias klogs='kubectl get logs -f'
alias kns='kubectl get namespaces'
alias kdc='kind delete cluster'
alias kcc='kind create cluster --image kindest/node:v1.21.12'
alias ctxgke='kubectl config set-context '
alias ctxkind='kubectl config set-context kind-kind'
alias tf='terraform'
alias top='gotop -c monokai'
alias gitreset='git reset --hard HEAD^'
alias gs='git status'
alias watcher='watch -t kubectl get pods --field-selector=status.phase!=Succeeded --selector=app!=jobqueue'
alias gateways='kubectl get gateways.networking.istio.io'
alias grafana='kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana -o jsonpath="{.items[0].metadata.name}") 3000:3000'
alias gitpullall='echo "[`date`] Pulling all repos ";find . -name .git -print -execdir git pull \;'
alias pr='gh pr view --web'
alias hg='history |grep $1'
alias gp='echo "[`date`] Pulling... "; git pull'
alias gP='echo "[`date`] Pushing..."; git push --set-upstream origin $(git_current_branch)'
alias gcm='git commit --message'
alias gwta='. git-worktree-add'
alias gwts='. git-worktree-switch'
alias gwtc='. git-worktree-clone-bare'
alias gwtclone='. git-worktree-clone-bare'
alias gwtr='. git-worktree-checkout-remote'
alias gwtcr='. git-worktree-checkout-remote'
alias gcl='echo "[`date`] Generating changelog..."; go install github.com/kisunji/gen-changelog@latest; gen-changelog'
alias weztitle='wezterm cli set-tab-title'

# Ingress port forward
alias igpf='kubectl -n istio-system port-forward $(kubectl -n istio-system get pods -listio=ingressgateway -o=jsonpath="{.items[0].metadata.name}") 15000'
# Get the http routes from the port-forwarded ingressgateway pod (requires jq)
alias iroutes='curl --silent http://localhost:15000/config_dump | jq '\''.configs.dynamic_route_configs[].route_config.virtual_hosts[] | {name: .name, domains: .domains, routes: .routes[].match.prefix}'\'''
 
# Get the logs of the first istio-ingressgateway pod
# Shows what happens with incoming requests and possible errors
alias igl='kubectl -n istio-system logs -f $(kubectl -n istio-system get pods -listio=ingressgateway -o=jsonpath="{.items[0].metadata.name}")'
 
# Get the logs of the first istio-pilot pod
# Shows issues with configurations or connecting to the Envoy proxies
alias ipl='kubectl -n istio-system logs -f $(kubectl -n istio-system get pods -listio=pilot -o=jsonpath="{.items[0].metadata.name}") discovery'

# Run a busybox container in a cluster
alias kubedebug='kubectl run -i --tty curt-kubedebug --image=alpine -- bash'
# Run rediscli in a kubecluster

alias hdel='helm-nuke $1'


function gcp_delete_node_instance() {
  (
    local node="$1"
    set -e
    echo "Cordoning $node"
    kubectl cordon "$node"
    echo "Draining $node"
    kubectl drain "$node" --force --ignore-daemonsets --delete-emptydir-data
    zone="$(kubectl get node "$node" -o jsonpath='{.metadata.labels.topology\.gke\.io/zone}')"
    instance_group=$(gcloud compute instances describe --zone="$zone" --format='value[](metadata.items.created-by)' "$node")
    instance_group="${instance_group##*/}"
    echo "Deleting instance for node '$node' in zone '$zone' instance group '$instance_group'"
    gcloud compute instance-groups managed delete-instances --instances="$node" --zone="$zone" "$instance_group"
    echo "Deleting instance for node '$node' completed."
  )
}

TRAPWINCH() {
  zle && { zle reset-prompt; zle -R }
}

export USE_GKE_GCLOUD_AUTH_PLUGIN=True
export CLOUDSDK_PYTHON="${HOMEBREW_DIR}/Cellar/python@3.8/3.8.17_1/libexec/bin/python"
# The next line updates PATH for the Google Cloud SDK.
if [ -f '${HOMEBREW_DIR}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc' ]; then . '${HOMEBREW_DIR}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '${HOMEBREW_DIR}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc' ]; then . '${HOMEBREW_DIR}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'; fi

# kubectl completion
source <(kubectl completion zsh)

export VSCODE='/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code'
alias vscode='$VSCODE $*'
alias code='$VSCODE $*'
alias ls='exa -la --ignore-glob=.DS_Store'
alias tree='exa -aT --git-ignore --ignore-glob=.git'
alias tmuxwork='tmuxinator start work'
alias tmuxhome='tmuxinator start home'
alias tmuxkill='tmux kill-server'
alias tmuxserver='tmux new'

alias weather='curl wttr.in/kitchener'
alias cddotfiles='cd $DOTFILES'


# CPU throttling
export THROTTLE_APPS=(
Brave
Chrome
Docker
com.docker.hyperkit
Alacritty
Firefox
gopls
Slack
Steam
VScode
Safari
Syncthing
zsh)
alias benice='for APP in ${THROTTLE_APPS}; do echo "[`date`] Lowering CPU usage for ${APP}"; for PROCESS in $(pgrep ${APP}); do sudo renice +20 -p ${PROCESS}; done; done'
alias benormal='for APP in ${THROTTLE_APPS}; do echo "[`date`] Setting CPU usage normal for ${APP}"; for PROCESS in $(pgrep ${APP}); do sudo renice +0 -p ${PROCESS}; done; done'

# Controlling dell monitor with software
export DDCCTL="${DOTFILES}/bin/m1ddc"
alias work="${DDCCTL} set input 27"
alias home="${DDCCTL} set input 17"
alias pc="${DDCCTL} set input 15"

# Setup Zoxide
eval "$(zoxide init zsh)"



[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit

ulimit -S -n 200048

# Private things you do not want in dot files 
if [ -f ${HOME}/.private.post.source ]; then
  source ${HOME}/.private.post.source
fi
